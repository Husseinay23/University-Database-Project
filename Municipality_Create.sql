CREATE DATABASE IF NOT EXISTS Municipality;
CREATE SCHEMA Municipality;

USE Municipality;
-- Table: Donor
CREATE TABLE IF NOT EXISTS Donor (
    DID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    DNAME VARCHAR(255) NOT NULL,
    DPhoneNumber VARCHAR(15) NOT NULL,
    DEmail VARCHAR(255) NOT NULL,
    DAddress VARCHAR(255) NOT NULL
);

-- Table: Vendor
CREATE TABLE IF NOT EXISTS Vendor (
    VID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    VNAME VARCHAR(255) NOT NULL,
    VPhoneNumber VARCHAR(15) NOT NULL
);

-- Table: Good
CREATE TABLE IF NOT EXISTS Good (
    GID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    DID INT NOT NULL,
    GNAME VARCHAR(255) NOT NULL,
    COST DECIMAL(10,2) NOT NULL,
    GCONDITION VARCHAR(50),
    Expiration_Date DATE,
    GCategory_ID INT NOT NULL,
    GDescription VARCHAR(255),
    GQuantity INT NOT NULL,
    FOREIGN KEY (DID) REFERENCES Donor(DID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table: Transaction
CREATE TABLE IF NOT EXISTS Transactions (
    TID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    GID INT NOT NULL,
    VID INT NOT NULL,
    TQuantity INT,
    TCOST DECIMAL(10,2),
    TDATE DATE,
    FOREIGN KEY (GID) REFERENCES Good(GID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (VID) REFERENCES Vendor(VID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table: Family
CREATE TABLE IF NOT EXISTS Family (
    FID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    HealthInfo VARCHAR(255),
    Social_Support_Network VARCHAR(255),
    Housing_Condition VARCHAR(255),
    FEmail VARCHAR(255),
    FPhone_Number VARCHAR(15),
    FAddress VARCHAR(255),
    AltFAddress VARCHAR(255),
    FGuardian VARCHAR(255),
    SpecialNeeds VARCHAR(255)
);

-- Table: Monetary_Donation
CREATE TABLE IF NOT EXISTS Monetary_Donation (
    MDID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    DID INT NOT NULL,
    FID INT NOT NULL,
    Amount INT,
    FOREIGN KEY (DID) REFERENCES Donor(DID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (FID) REFERENCES Family(FID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table: Family_Member
CREATE TABLE IF NOT EXISTS Family_Member (
    MID INT AUTO_INCREMENT PRIMARY KEY,
    FID INT,
    Date_Of_Birth DATE,
    Phone_num VARCHAR(15),
    Gender CHAR(1),
    Health_Needs VARCHAR(255),
    FOREIGN KEY (FID) REFERENCES Family(FID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table: Section
CREATE TABLE IF NOT EXISTS Section (
    SECID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    GID INT,
    AMOUNT INT,
    FOREIGN KEY (GID) REFERENCES Good(GID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Table: Staff
CREATE TABLE IF NOT EXISTS Staff (
    SID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    SNAME VARCHAR(255),
    SRole VARCHAR(255),
    SALARY DECIMAL(10,2),
    Working_Hours DATETIME
);

-- Table: Equipment
CREATE TABLE IF NOT EXISTS Equipment (
    EID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    QUANTITY INT,
    Last_Maintained DATETIME,
    ETYPE VARCHAR(255)
);

-- Table: Manager
CREATE TABLE IF NOT EXISTS Manager (
    ManID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    Mname VARCHAR(255),
    SID INT,
    FOREIGN KEY(SID) REFERENCES Staff(SID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Uses (
    SID INT NOT NULL,
    EID INT NOT NULL,
    Start_Time DATETIME,
    End_Time DATETIME,
    FOREIGN KEY(SID) REFERENCES Staff(SID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (EID) REFERENCES Equipment(EID) ON DELETE CASCADE ON UPDATE CASCADE);

-- Table: Warehouse
CREATE TABLE IF NOT EXISTS Warehouse (
    WID INT NOT NULL auto_increment primary KEY,
    SID INT NOT NULL,
    VID INT NOT NULL,
    DID INT NOT NULL,
    ManID INT NOT NULL,
    SECID INT NOT NULL,
    WNAME VARCHAR(255),
    WLOCATION VARCHAR(255),
    WCapacity VARCHAR(255),
    Security_Measures VARCHAR(255),
    Climate_Control VARCHAR(255),
    CAPACITY DECIMAL(10,2),
    FOREIGN KEY (SID) REFERENCES Section(SECID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (VID) REFERENCES Vendor(VID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (DID) REFERENCES Donor(DID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ManID) REFERENCES Manager(ManID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (SECID) REFERENCES Section(SECID) ON DELETE CASCADE ON UPDATE CASCADE
);